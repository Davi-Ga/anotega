"use strict";(self.webpackChunkanotega=self.webpackChunkanotega||[]).push([[434],{4792:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>d,contentTitle:()=>n,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=a(5893),t=a(1151);const r={sidebar_position:6},n="Testes no Django",i={id:"Django/tests",title:"Testes no Django",description:"Testes s\xe3o uma parte essencial do desenvolvimento de software. Eles garantem que o c\xf3digo que escrevemos funciona como esperado e que as mudan\xe7as que fazemos n\xe3o quebram o que j\xe1 est\xe1 funcionando. No Django, temos v\xe1rias ferramentas para escrever testes, como o m\xf3dulo unittest e o TestCase do Django.",source:"@site/docs/Django/tests.md",sourceDirName:"Django",slug:"/Django/tests",permalink:"/anotega/docs/Django/tests",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Django/tests.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"anotacoesSidebar",previous:{title:"Roled-Based Access Control (RBAC)",permalink:"/anotega/docs/Django/rbac"},next:{title:"Testes",permalink:"/anotega/docs/category/testes"}},d={},c=[{value:"Exemplo de Teste",id:"exemplo-de-teste",level:2},{value:"Diferen\xe7a entre setUp e setUpTestData",id:"diferen\xe7a-entre-setup-e-setuptestdata",level:2},{value:"APIRequestFactory vs Client",id:"apirequestfactory-vs-client",level:2}];function u(e){const s={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"testes-no-django",children:"Testes no Django"}),"\n",(0,o.jsxs)(s.p,{children:["Testes s\xe3o uma parte essencial do desenvolvimento de software. Eles garantem que o c\xf3digo que escrevemos funciona como esperado e que as mudan\xe7as que fazemos n\xe3o quebram o que j\xe1 est\xe1 funcionando. No Django, temos v\xe1rias ferramentas para escrever testes, como o m\xf3dulo ",(0,o.jsx)(s.code,{children:"unittest"})," e o ",(0,o.jsx)(s.code,{children:"TestCase"})," do Django."]}),"\n",(0,o.jsxs)(s.p,{children:["TestCase \xe9 uma subclasse de ",(0,o.jsx)(s.code,{children:"unittest.TestCase"})," que adiciona v\xe1rias funcionalidades espec\xedficas do Django. Ele nos permite criar um banco de dados tempor\xe1rio para testes, carregar dados iniciais e executar testes de integra\xe7\xe3o."]}),"\n",(0,o.jsx)(s.h2,{id:"exemplo-de-teste",children:"Exemplo de Teste"}),"\n",(0,o.jsxs)(s.p,{children:["Vamos criar um teste simples para a nossa aplica\xe7\xe3o. Suponha que temos um modelo ",(0,o.jsx)(s.code,{children:"User"})," e queremos testar se ele est\xe1 funcionando corretamente."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from django.test import TestCase\nfrom .models import User\n\nclass UserTestCase(TestCase):\n    def setUp(self):\n        User.objects.create(name="John", email="", password="123456")\n\n    def test_user_creation(self):\n        user = User.objects.get(name="John")\n        self.assertEqual(user.password, "123456")\n'})}),"\n",(0,o.jsxs)(s.p,{children:["Neste exemplo, criamos um teste que verifica se um usu\xe1rio \xe9 criado corretamente. Primeiro, usamos o m\xe9todo ",(0,o.jsx)(s.code,{children:"setUp"})," para criar um usu\xe1rio na base de dados. Em seguida, usamos o m\xe9todo ",(0,o.jsx)(s.code,{children:"test_user_creation"})," para verificar se o usu\xe1rio foi criado corretamente.",(0,o.jsx)(s.br,{}),"\n","O ",(0,o.jsx)(s.code,{children:"setUp"})," \xe9 um m\xe9todo especial que \xe9 executado antes de cada teste. Ele \xe9 usado para configurar o ambiente de teste, como criar objetos no banco de dados ou carregar dados iniciais.",(0,o.jsx)(s.br,{}),"\n","Os ",(0,o.jsx)(s.code,{children:"asserts"})," s\xe3o m\xe9todos que verificam se uma condi\xe7\xe3o \xe9 verdadeira. Se a condi\xe7\xe3o for falsa, o teste falhar\xe1, ou seja 'assertEqual' verifica se dois valores s\xe3o iguais."]}),"\n",(0,o.jsx)(s.h2,{id:"diferen\xe7a-entre-setup-e-setuptestdata",children:"Diferen\xe7a entre setUp e setUpTestData"}),"\n",(0,o.jsxs)(s.p,{children:["O m\xe9todo ",(0,o.jsx)(s.code,{children:"setUp"})," \xe9 invocado antes de cada teste individual, o que significa que ele pode ser executado m\xfaltiplas vezes durante uma su\xedte de testes. Se voc\xea estiver criando um grande n\xfamero de objetos no banco de dados dentro deste m\xe9todo, isso pode resultar em testes mais lentos devido ao tempo de cria\xe7\xe3o e configura\xe7\xe3o desses objetos."]}),"\n",(0,o.jsxs)(s.p,{children:["Por outro lado, o m\xe9todo ",(0,o.jsx)(s.code,{children:"setUpTestData"})," \xe9 executado uma \xfanica vez antes de todos os testes serem iniciados. Isso o torna mais eficiente para a cria\xe7\xe3o de objetos no banco de dados, j\xe1 que a cria\xe7\xe3o e configura\xe7\xe3o desses objetos ocorre apenas uma vez, independentemente do n\xfamero de testes. Isso pode resultar em uma execu\xe7\xe3o de teste mais r\xe1pida e eficiente."]}),"\n",(0,o.jsx)(s.h2,{id:"apirequestfactory-vs-client",children:"APIRequestFactory vs Client"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"self.client"})," \xe9 uma inst\xe2ncia de ",(0,o.jsx)(s.code,{children:"django.test.Client"}),". Ele \xe9 usado para simular um cliente da web em testes. Ele pode fazer solicita\xe7\xf5es GET, POST, PUT, DELETE, etc., e retorna uma resposta que pode ser testada. ",(0,o.jsx)(s.code,{children:"self.client"})," tamb\xe9m mant\xe9m um estado de sess\xe3o entre as solicita\xe7\xf5es, o que significa que voc\xea pode fazer login com um usu\xe1rio e esse usu\xe1rio permanecer\xe1 autenticado nas solicita\xe7\xf5es subsequentes."]}),"\n",(0,o.jsxs)(s.p,{children:["Por outro lado, ",(0,o.jsx)(s.code,{children:"APIRequestFactory"})," \xe9 uma f\xe1brica de solicita\xe7\xf5es que permite criar solicita\xe7\xf5es de teste. As solicita\xe7\xf5es criadas com ",(0,o.jsx)(s.code,{children:"APIRequestFactory"})," n\xe3o t\xeam suporte para cookies e sess\xf5es. Isso significa que voc\xea n\xe3o pode usar ",(0,o.jsx)(s.code,{children:"APIRequestFactory"})," para testar a autentica\xe7\xe3o baseada em sess\xe3o. No entanto, ",(0,o.jsx)(s.code,{children:"APIRequestFactory"})," \xe9 \xfatil quando voc\xea precisa criar uma solicita\xe7\xe3o e pass\xe1-la diretamente para uma view para testar a view isoladamente."]}),"\n",(0,o.jsxs)(s.p,{children:["Em resumo, ",(0,o.jsx)(s.code,{children:"self.client"})," \xe9 mais adequado para testes de integra\xe7\xe3o onde voc\xea precisa testar a autentica\xe7\xe3o e a intera\xe7\xe3o entre v\xe1rias partes do seu aplicativo, enquanto ",(0,o.jsx)(s.code,{children:"APIRequestFactory"})," \xe9 mais adequado para testes unit\xe1rios onde voc\xea precisa testar uma view isoladamente."]}),"\n",(0,o.jsx)(s.admonition,{title:"Aten\xe7\xe3o",type:"tip",children:(0,o.jsx)(s.p,{children:"Vale lembrar que APIRequestFactory serve apenas para criar solicita\xe7\xf5es, mas ele n\xe3o as enviar\xe1 para a view. Para isso, voc\xea precisar\xe1 chamar a view diretamente com a solicita\xe7\xe3o criada."})})]})}function l(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,s,a)=>{a.d(s,{Z:()=>i,a:()=>n});var o=a(7294);const t={},r=o.createContext(t);function n(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);